#include<bits/stdc++.h>
using namespace std;
class Solution {
public:
    #define max(x,y) (x)<(y)?(y):(x)
    #define min(x,y) (x)<(y)?(x):(y)
    long long dp[105];
    static bool cmp(vector<int>a,vector<int>b){
        return a[0]<b[0];
    }
    long long dis[105][105][2];
    long long minimumTotalDistance(vector<int>& robot, vector<vector<int>>& factory) {
        dp[0]=0;
        sort(robot.begin(),robot.end());
        sort(factory.begin(),factory.end(),cmp);
        int n=robot.size();
        for(int i=1;i<=n;++i){
            dp[i]=1e16;
            for(int j=1;j<=i;++j){
                long long Min=1e16;
                for(int k=(j==1?j-1:j);k<=(i==n?i:i-1);++k){
                    vector<vector<int>>tmp;
                    for(auto &x:factory){
                        if(x[0]>=robot[max(0,j-2)]&&x[0]<=robot[min(n-1,i)])tmp.push_back(x);
                        else{
                            if(j==1){
                                if(x[0]<=robot[min(n-1,i)])tmp.push_back(x);
                                else if(i==n){
                                    if(x[0]>=robot[max(0,j-2)])tmp.push_back(x);
                                }
                            }
                            else if(i==n){
                                if(x[0]>=robot[max(0,j-2)])tmp.push_back(x);
                            }
                        }
                    }
                    int now=0;
                    bool ky=true;
                    long long sum=0;
                    for(int pos=j;pos<=k;++pos){
                        while(now<tmp.size()&&(robot[pos-1]>tmp[now][0]||tmp[now][1]==0))++now;
                        if(now==tmp.size()){
                            ky=false;
                            break;
                        }
                        sum+=tmp[now][0]-robot[pos-1];
                        assert(tmp[now][0]-robot[pos-1]>=0);
                        --tmp[now][1];
                    }
                    if(!ky)continue;
                    now=tmp.size()-1;
                    for(int pos=i;pos>k;--pos){
                        while(now>=0&&(robot[pos-1]<tmp[now][0]||tmp[now][1]==0))--now;
                        if(now==-1){
                            ky=false;
                            break;
                        }
                        sum+=robot[pos-1]-tmp[now][0];
                        assert(tmp[now][0]-robot[pos-1]<=0);
                        --tmp[now][1];
                    }
                    if(ky){
                        Min=min(Min,sum);
                    }
                }
                dp[i]=min(dp[i],dp[j-1]+Min);
            }
        }
        return dp[n];
    }
};
int main(){
	vector<int>a={962255677,-762380105,610274894,287954409,-174071320,510854000,209588877,-627021703,929978413,-872247930,-254613561,-695693307,273170072,-129426337,258902041,-989276030,448027560,504198179,112451797,109792351,-322156405,-380712099,707713409,-472416523,728170436,-779134100,446380576,-812550074,-769951228,695511021,424224538,223803204,46344209,-15114572,-694291265,-383187880,-999006547,246881285,-818037168,543668069,668603845,158001964,576972324,120851165,-333849828,631376623,-396777663,-278402403,768654267,-292947840,-254013834,101637354,629916051,-113519946,-979293075,-69520082,-974399764,115721148,768431981,106384285,-593233852,-26727529,-177159837,341435688,-501779315,-77583181,198530612,-274592839,-4670352,-47596640,-103706810,-335160238,-836850602,788886075,336043023,587141203,-314677424,-963669904,90164672,279365649,764238393,889244647,-279030903,-980274141,452706496,-412429358,-359352345,-96367870,949411067};
	vector<vector<int> >b={{862501446,82},{130806691,39},{536699542,62},{960461717,30},{-66506845,35},{425475801,57},{-379948987,5},{-79176803,35},{791543774,64},{-896818851,70},{-714762162,70},{724321334,64},{-15419134,21},{-540512804,73},{-645047783,43},{-700555237,26},{884358537,3},{-338556156,88},{-686047305,71},{-968731566,69},{-238605164,32},{655598560,47},{-610222584,49},{443324453,59},{458880521,74},{178848810,9},{945417347,34},{-401726654,13},{492870083,82},{-698352865,45},{717554124,72},{-652972719,15},{774950957,76},{654106114,60},{987022832,42},{572527606,1},{-792322581,80},{74886721,5},{-10650224,78},{855010118,5},{829406390,52},{775843733,59},{136216918,35},{348488334,33},{-549569589,47},{216615365,39},{419335869,72},{678935972,43},{87293041,21},{605212671,41},{837466621,78},{-751548635,49},{268749781,7},{34102526,5},{205187289,39},{137453687,3},{-636914444,29},{-204800253,58},{-894087485,88},{713520819,2},{-643641067,29},{480615375,74},{516137558,32},{-232834387,51},{-845017501,77},{669128166,32},{71898632,15},{-588947881,78},{-428125224,47},{546355741,88},{-113754207,12},{700373809,56},{315929856,74},{-1032453,63},{91744921,23},{290716055,80},{958690681,51},{-46875217,45},{394398244,15},{906926938,48},{632776740,24},{-57761147,68},{-205738629,83},{-199178552,3},{365155321,5},{261708256,71},{-673282328,39},{25956262,84},{510346503,35},{324592030,89},{-222463178,8},{561735826,33},{-197197912,85},{-158885796,55},{108694393,80},{-82191069,68}};
	Solution tmp;
	cout<<tmp.minimumTotalDistance(a,b);
	return 0;
}