#include<bits/stdc++.h>
using namespace std;
int a[105][105],ans[110005][6],cnt;
char tmp[105][105];
int n,m;
void work(){
	if(a[n-1][m-1]&&a[n][m-1]&&a[n-1][m]&&a[n][m]){
		++cnt;
		ans[cnt][0]=n-1;
		ans[cnt][1]=m;
		ans[cnt][2]=n;
		ans[cnt][3]=m-1;
		ans[cnt][4]=n;
		ans[cnt][5]=m;
		++cnt;
		ans[cnt][0]=n-1;
		ans[cnt][1]=m-1;
		ans[cnt][2]=n;
		ans[cnt][3]=m-1;
		ans[cnt][4]=n;
		ans[cnt][5]=m;
		++cnt;
		ans[cnt][0]=n-1;
		ans[cnt][1]=m-1;
		ans[cnt][2]=n-1;
		ans[cnt][3]=m;
		ans[cnt][4]=n;
		ans[cnt][5]=m;
		++cnt;
		ans[cnt][0]=n-1;
		ans[cnt][1]=m-1;
		ans[cnt][2]=n;
		ans[cnt][3]=m-1;
		ans[cnt][4]=n-1;
		ans[cnt][5]=m;
		return;
	}
	if(!a[n-1][m-1]&&a[n][m-1]&&a[n-1][m]&&a[n][m]){
		++cnt;
		ans[cnt][0]=n-1;
		ans[cnt][1]=m;
		ans[cnt][2]=n;
		ans[cnt][3]=m-1;
		ans[cnt][4]=n;
		ans[cnt][5]=m;
		return;
	}
	if(a[n-1][m-1]&&!a[n][m-1]&&a[n-1][m]&&a[n][m]){
		++cnt;
		ans[cnt][0]=n-1;
		ans[cnt][1]=m-1;
		ans[cnt][2]=n-1;
		ans[cnt][3]=m;
		ans[cnt][4]=n;
		ans[cnt][5]=m;
		return;
	}
	if(a[n-1][m-1]&&a[n][m-1]&&!a[n-1][m]&&a[n][m]){
		++cnt;
		ans[cnt][0]=n-1;
		ans[cnt][1]=m-1;
		ans[cnt][2]=n;
		ans[cnt][3]=m-1;
		ans[cnt][4]=n;
		ans[cnt][5]=m;
		return;
	}
	if(a[n-1][m-1]&&a[n][m-1]&&a[n-1][m]&&!a[n][m]){
		++cnt;
		ans[cnt][0]=n-1;
		ans[cnt][1]=m-1;
		ans[cnt][2]=n;
		ans[cnt][3]=m-1;
		ans[cnt][4]=n-1;
		ans[cnt][5]=m;
		return;
	}
	if(!a[n-1][m-1]&&!a[n][m-1]&&a[n-1][m]&&a[n][m]){
		++cnt;
		ans[cnt][0]=n-1;
		ans[cnt][1]=m-1;
		ans[cnt][2]=n;
		ans[cnt][3]=m-1;
		ans[cnt][4]=n;
		ans[cnt][5]=m;
		++cnt;
		ans[cnt][0]=n-1;
		ans[cnt][1]=m-1;
		ans[cnt][2]=n-1;
		ans[cnt][3]=m;
		ans[cnt][4]=n;
		ans[cnt][5]=m-1;
		return;
	}
	if(!a[n-1][m-1]&&a[n][m-1]&&!a[n-1][m]&&a[n][m]){
		++cnt;
		ans[cnt][0]=n-1;
		ans[cnt][1]=m-1;
		ans[cnt][2]=n-1;
		ans[cnt][3]=m;
		ans[cnt][4]=n;
		ans[cnt][5]=m;
		++cnt;
		ans[cnt][0]=n-1;
		ans[cnt][1]=m-1;
		ans[cnt][2]=n-1;
		ans[cnt][3]=m;
		ans[cnt][4]=n;
		ans[cnt][5]=m-1;
		return;
	}
	if(a[n-1][m-1]&&!a[n][m-1]&&a[n-1][m]&&!a[n][m]){
		++cnt;
		ans[cnt][0]=n-1;
		ans[cnt][1]=m-1;
		ans[cnt][2]=n;
		ans[cnt][3]=m-1;
		ans[cnt][4]=n;
		ans[cnt][5]=m;
		++cnt;
		ans[cnt][0]=n;
		ans[cnt][1]=m-1;
		ans[cnt][2]=n-1;
		ans[cnt][3]=m;
		ans[cnt][4]=n;
		ans[cnt][5]=m;
		return;
	}
	if(a[n-1][m-1]&&a[n][m-1]&&!a[n-1][m]&&!a[n][m]){
		++cnt;
		ans[cnt][0]=n-1;
		ans[cnt][1]=m-1;
		ans[cnt][2]=n-1;
		ans[cnt][3]=m;
		ans[cnt][4]=n;
		ans[cnt][5]=m;
		++cnt;
		ans[cnt][0]=n;
		ans[cnt][1]=m;
		ans[cnt][2]=n-1;
		ans[cnt][3]=m;
		ans[cnt][4]=n;
		ans[cnt][5]=m-1;
		return;
	}
	if(!a[n-1][m-1]&&a[n][m-1]&&a[n-1][m]&&!a[n][m]){
		++cnt;
		ans[cnt][0]=n-1;
		ans[cnt][1]=m-1;
		ans[cnt][2]=n;
		ans[cnt][3]=m-1;
		ans[cnt][4]=n;
		ans[cnt][5]=m;
		++cnt;
		ans[cnt][0]=n-1;
		ans[cnt][1]=m-1;
		ans[cnt][2]=n-1;
		ans[cnt][3]=m;
		ans[cnt][4]=n;
		ans[cnt][5]=m;
		return;
	}
	if(a[n-1][m-1]&&!a[n][m-1]&&!a[n-1][m]&&a[n][m]){
		++cnt;
		ans[cnt][0]=n;
		ans[cnt][1]=m-1;
		ans[cnt][2]=n-1;
		ans[cnt][3]=m;
		ans[cnt][4]=n;
		ans[cnt][5]=m;
		++cnt;
		ans[cnt][0]=n-1;
		ans[cnt][1]=m-1;
		ans[cnt][2]=n-1;
		ans[cnt][3]=m;
		ans[cnt][4]=n;
		ans[cnt][5]=m-1;
		return;
	}
	if(a[n-1][m-1]&&!a[n][m-1]&&!a[n-1][m]&&!a[n][m]){
		++cnt;
		ans[cnt][0]=n-1;
		ans[cnt][1]=m-1;
		ans[cnt][2]=n;
		ans[cnt][3]=m-1;
		ans[cnt][4]=n;
		ans[cnt][5]=m;
		++cnt;
		ans[cnt][0]=n-1;
		ans[cnt][1]=m-1;
		ans[cnt][2]=n-1;
		ans[cnt][3]=m;
		ans[cnt][4]=n;
		ans[cnt][5]=m;
		++cnt;
		ans[cnt][0]=n-1;
		ans[cnt][1]=m-1;
		ans[cnt][2]=n-1;
		ans[cnt][3]=m;
		ans[cnt][4]=n;
		ans[cnt][5]=m-1;
		return;
	}
	if(!a[n-1][m-1]&&a[n][m-1]&&!a[n-1][m]&&!a[n][m]){
		++cnt;
		ans[cnt][0]=n;
		ans[cnt][1]=m-1;
		ans[cnt][2]=n-1;
		ans[cnt][3]=m-1;
		ans[cnt][4]=n-1;
		ans[cnt][5]=m;
		++cnt;
		ans[cnt][0]=n-1;
		ans[cnt][1]=m-1;
		ans[cnt][2]=n;
		ans[cnt][3]=m-1;
		ans[cnt][4]=n;
		ans[cnt][5]=m;
		++cnt;
		ans[cnt][0]=n;
		ans[cnt][1]=m-1;
		ans[cnt][2]=n-1;
		ans[cnt][3]=m;
		ans[cnt][4]=n;
		ans[cnt][5]=m;
		return;
	}
	if(!a[n-1][m-1]&&!a[n][m-1]&&a[n-1][m]&&!a[n][m]){
		++cnt;
		ans[cnt][0]=n-1;
		ans[cnt][1]=m;
		ans[cnt][2]=n;
		ans[cnt][3]=m-1;
		ans[cnt][4]=n;
		ans[cnt][5]=m;
		++cnt;
		ans[cnt][0]=n-1;
		ans[cnt][1]=m-1;
		ans[cnt][2]=n-1;
		ans[cnt][3]=m;
		ans[cnt][4]=n;
		ans[cnt][5]=m;
		++cnt;
		ans[cnt][0]=n-1;
		ans[cnt][1]=m-1;
		ans[cnt][2]=n-1;
		ans[cnt][3]=m;
		ans[cnt][4]=n;
		ans[cnt][5]=m-1;
		return;
	}
	if(!a[n-1][m-1]&&!a[n][m-1]&&!a[n-1][m]&&a[n][m]){
		++cnt;
		ans[cnt][0]=n;
		ans[cnt][1]=m;
		ans[cnt][2]=n-1;
		ans[cnt][3]=m-1;
		ans[cnt][4]=n-1;
		ans[cnt][5]=m;
		++cnt;
		ans[cnt][0]=n-1;
		ans[cnt][1]=m-1;
		ans[cnt][2]=n;
		ans[cnt][3]=m-1;
		ans[cnt][4]=n;
		ans[cnt][5]=m;
		++cnt;
		ans[cnt][0]=n;
		ans[cnt][1]=m-1;
		ans[cnt][2]=n-1;
		ans[cnt][3]=m;
		ans[cnt][4]=n;
		ans[cnt][5]=m;
		return;
	}
}
int main(){
	int t;
	scanf("%d",&t);
	while(t--){
		scanf("%d%d",&n,&m);
		for(int i=1;i<=n;++i){
			for(int j=1;j<=m;++j){
				cin>>tmp[i][j];
				a[i][j]=tmp[i][j]-'0';
			}
		}
		cnt=0;
		for(int i=1;i<=n-2;++i){
			for(int j=1;j<=m;++j){
				if(a[i][j]==0)continue;
				++cnt;
				if(j!=m){
					ans[cnt][0]=i;
					ans[cnt][1]=j;
					ans[cnt][2]=i+1;
					ans[cnt][3]=j;
					ans[cnt][4]=i+1;
					ans[cnt][5]=j+1;
					a[i][j]=1-a[i][j];
					a[i+1][j]=1-a[i+1][j];
					a[i+1][j+1]=1-a[i+1][j+1];
				}
				else{
					ans[cnt][0]=i;
					ans[cnt][1]=j;
					ans[cnt][2]=i+1;
					ans[cnt][3]=j;
					ans[cnt][4]=i+1;
					ans[cnt][5]=j-1;
					a[i][j]=1-a[i][j];
					a[i+1][j]=1-a[i+1][j];
					a[i+1][j-1]=1-a[i+1][j-1];
				}
			}
		}
		for(int i=1;i<=m-2;++i){
			if(!a[n-1][i]&&!a[n][i])continue;
			++cnt;
			if(a[n-1][i]&&a[n][i]){
				ans[cnt][0]=n-1;
				ans[cnt][1]=i;
				ans[cnt][2]=n;
				ans[cnt][3]=i;
				ans[cnt][4]=n;
				ans[cnt][5]=i+1;
				a[n-1][i]=1-a[n-1][i];
				a[n][i]=1-a[n][i];
				a[n][i+1]=1-a[n][i+1];
			}
			else if(a[n-1][i]){
				ans[cnt][0]=n-1;
				ans[cnt][1]=i;
				ans[cnt][2]=n-1;
				ans[cnt][3]=i+1;
				ans[cnt][4]=n;
				ans[cnt][5]=i+1;
				a[n-1][i]=1-a[n-1][i];
				a[n-1][i+1]=1-a[n-1][i+1];
				a[n][i+1]=1-a[n][i+1];
			}
			else{
				ans[cnt][0]=n;
				ans[cnt][1]=i;
				ans[cnt][2]=n-1;
				ans[cnt][3]=i+1;
				ans[cnt][4]=n;
				ans[cnt][5]=i+1;
				a[n][i]=1-a[n][i];
				a[n-1][i+1]=1-a[n-1][i+1];
				a[n][i+1]=1-a[n][i+1];
			}
		}
		work();
		printf("%d\n",cnt);
		for(int i=1;i<=cnt;++i){
			for(int j=0;j<6;++j)printf("%d ",ans[i][j]);
			printf("\n");
		}
	}
	return 0;
}
